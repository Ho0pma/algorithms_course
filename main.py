# ФИБОНАЧИ
# ЗАДАЧА: нужно получить последовательности фибоначчи
# def fib_for(n):
#     f1, f2 = 0, 1
#     print(f1, f2, end=' ')
#     for i in range(1, n):
#         f1, f2 = f2, f1 + f2
#         print(f2, end=' ')
#
# print(fib_for(10))
#----------------------------------------------------------------------------------------------------------------------#

# ЗАДАЧА: нужно получить последовательности фибоначчи РЕКУРСИВНО
# def fib_rec(n):
#     if n <= 1:
#         return 1
#     else:
#         return fib_rec(n - 1) + fib_rec(n - 2)
#
# print(fib_rec(100))
#----------------------------------------------------------------------------------------------------------------------#

# # ТЕСТ ДЛЯ ФУНКЦИИ FIB_FOR
# import time
# start_time = time.time()  # Засекаем начальное время
# fib_for(100)               # Вызываем функцию
# end_time = time.time()    # Засекаем конечное время
#
# execution_time1 = end_time - start_time
# print(f"\nВремя выполнения функции: {execution_time1} секунд")

# # тест для функции fib_rec
# start_time = time.time()  # Засекаем начальное время
# fib_rec(30)               # Вызываем функцию
# end_time = time.time()    # Засекаем конечное время
#
# execution_time2 = end_time - start_time
# print(f"\nВремя выполнения функции: {execution_time2} секунд")

# print('\n', min([execution_time1, execution_time2]))
#----------------------------------------------------------------------------------------------------------------------#

# ЗАДАНИЕ №1 Найти n-ое число фибоначчи
# def fib(n):
#     fib1, fib2 = 0, 1
#     for i in range(n):
#         fib1, fib2 = fib2, fib1 + fib2
#     return fib1
# def main():
#     n = int(input())
#     print(fib(n))
#
#
# if __name__ == "__main__":
#     main()
#----------------------------------------------------------------------------------------------------------------------#

# ЗАДАНИЕ №2 Найти последнюю цифру n-го числа фибоначчи
# def fib(n):
#     fib1, fib2 = 0, 1
#     for i in range(n):
#         fib1, fib2 = fib2, (fib1 + fib2) % 10   # тк мы получаем только ласт цифру мы можем считать так хоть лям значений
#     return fib1                                 # если без %10 error --> Exceeds the limit (4300) for integer
# def main():
#     n = int(input())
#     print(fib(n))
#
#
# if __name__ == "__main__":
#     main()
#----------------------------------------------------------------------------------------------------------------------#

# ЗАДАНИЕ №3 Найти остаток от деления n-го числа фибоначчи на число m
# def find_pisano_period(m):           # при делении числа фиб на число m будет составляться последовательность остатков
#     a, b = 0, 1                      # они начнут повторяться через n-e число. В этот момент мы стопаем алгоритм.
#     period = [0, 1]                  # Чтобы получить деление фиб-числа на m - нужно найти индекс этого числа в получившейся
#                                      # последовательности.
#     while True:
#         a, b = b, (a + b) % m
#         period.append(b)
#
#         if period[-2:] == [0, 1]:
#             return period[:-2]
#
#
# def find_fibonacci(n, m):
#     if n <= 1:
#         return n
#
#     pisano_period = find_pisano_period(m)
#     index_in_period = n % len(pisano_period)    # n-ое число фиб деленное на длину ряда = индексу в последовательности остатков
#
#     return pisano_period[index_in_period]
#
# def main():
#     n, m = map(int, input().split())
#     print(find_fibonacci(n, m))
#
#
# if __name__ == "__main__":
#     main()
#----------------------------------------------------------------------------------------------------------------------#